{"version":3,"sources":["components/cards/cards.component.jsx","api/index.js","components/chart/chart.component.jsx","components/country-picker/country-picker.component.jsx","App.js","index.js","images/image.png"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","className","Grid","container","spacing","justify","item","component","Card","xs","md","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchedDailyData","lineChart","length","labels","datasets","label","borderColor","fill","barChart","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setfetchedCountries","fetchAPI","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","coronaImage","alt","React","Component","ReactDom","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9afc7997.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\n\r\nimport './cards.styles.css';\r\n\r\nconst Cards = ( {data: { confirmed, recovered, deaths, lastUpdate }}) => {\r\n    if(!confirmed){\r\n        return 'Loading...';\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <Grid container spacing={3} justify='center'>\r\n                <Grid item component={Card} className='card infected' xs={12} md={3}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start={0} \r\n                            end={confirmed.value}\r\n                            duration={2}\r\n                            separator=','\r\n                            />\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of active cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} className='card recovered' xs={12} md={3}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Recovered</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start={0} \r\n                            end={recovered.value}\r\n                            duration={2}\r\n                            separator=','\r\n                            />\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of recovered cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} className='card deaths' xs={12} md={3}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start={0} \r\n                            end={deaths.value}\r\n                            duration={2}\r\n                            separator=','\r\n                            />\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of deaths</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changableUrl = url;\r\n\r\n    if(country){\r\n        changableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try{\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changableUrl);\r\n\r\n        const modifiedData = { confirmed, recovered, deaths, lastUpdate }\r\n\r\n        return modifiedData;\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n    try{\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }))\r\n        return modifiedData;\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const { data: { countries }} = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport './chart.styles.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths}, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchedDailyData = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchedDailyData();\r\n    },[])\r\n\r\n    const lineChart = (\r\n        dailyData.length ? \r\n        (<Line \r\n            data={{\r\n                labels: dailyData.map(({ date }) => date ),\r\n                datasets: [{\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true\r\n                }, {\r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'rgba(255,0,0,0.5)',\r\n                    fill: true\r\n                }]\r\n            }}\r\n        />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n            <Bar \r\n                data= {{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor:[\r\n                            'rgba(0,0,255,0.5)',\r\n                            'rgba(0,255,0,0.5)',\r\n                            'rgba(255,0,0,0.5)'\r\n                        ],\r\n                        data: [confirmed.value, recovered.value, deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current state in ${country}`}\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    return (\r\n        <div className='chartContainer'>\r\n            { country ? barChart : lineChart }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport './country-picker.styles.css';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setfetchedCountries] = useState([]);\r\n    \r\n    useEffect(()=> {\r\n        const fetchAPI = async () => {\r\n            setfetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setfetchedCountries]);\r\n    \r\n    return (\r\n        <FormControl className='formControl'>\r\n            <NativeSelect defaultValue='' onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=''>Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport { fetchData } from './api';\r\n\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try{\r\n            const fetchedData = await fetchData();\r\n            this.setState({ data: fetchedData });\r\n        } catch(error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    handleCountryChange = async (country) => {\r\n        try{\r\n            const fetchedData = await fetchData(country)\r\n            this.setState({ data: fetchedData, country });\r\n        } catch(error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    render() {\r\n        const { data, country } = this.state;\r\n\r\n        return(\r\n            <div className='container'>\r\n                <img src={coronaImage} className='image' alt='Covid-19'/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDom.render(<App />, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}